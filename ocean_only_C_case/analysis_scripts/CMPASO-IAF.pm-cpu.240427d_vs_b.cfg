[runs]
## options related to the run to be analyzed and control runs to be
## compared against

# mainRunName is a name that identifies the simulation being analyzed.
#mainRunName = v3.LR.historical_0101-baseline
mainRunName = CMPASO-IAF.pm-cpu.240427d

# config file for a control run to which this run will be compared.  The
# analysis should have already been run to completion once with this config
# file, so that the relevant MPAS climatologies already exist and have been
# remapped to the comparison grid.  Leave this option commented out if no
# control run is desired.
controlRunConfigFile = /global/homes/m/mpeterse/tutorial_2024/mpas-analysis-scripts/CMPASO-IAF.pm-cpu.240427b.cfg

# config file for a main run on which the analysis was already run to
# completion.  The relevant MPAS climatologies already exist and have been
# remapped to the comparison grid and time series have been extracted.
# Leave this option commented out if the analysis for the main run should be
# performed.
mainRunConfigFile = /global/homes/m/mpeterse/tutorial_2024/mpas-analysis-scripts/CMPASO-IAF.pm-cpu.240427d.cfg

[execute]
## options related to executing parallel tasks

# the number of parallel tasks (1 means tasks run in serial, the default)
parallelTaskCount = 12

# the parallelism mode in ncclimo ("serial" or "bck")
# Set this to "bck" (background parallelism) if running on a machine that can
# handle 12 simultaneous processes, one for each monthly climatology.
ncclimoParallelMode = bck

# the number of MPI tasks to use in creating mapping files (1 means tasks run in
# serial, the default)
mapMpiTasks = 64

# "None" if ESMF should perform mapping file generation in serial without a
# command, or one of "srun" or "mpirun" if it should be run in parallel (or in
# serial but with a command)
mapParallelExec = srun

[diagnostics]
## config options related to observations, mapping files and region files used
## by MPAS-Analysis in diagnostics computations.

# The base path to the diagnostics directory.  Typically, this will be a shared
# directory on each E3SM supported machine (see the example config files for
# its location).  For other machines, this would be the directory pointed to
# when running "download_analysis_data.py" to get the public observations,
# mapping files and region files.
baseDirectory = /global/cfs/cdirs/e3sm/diagnostics

[input]
## options related to reading in the results to be analyzed

# directory containing model results
#baseDirectory = /pscratch/sd/d/dcomeau/E3SMv3/Tutorials/v3.LR.historical_0101-baseline.pm-cpu/tests/custom-8_1x1_nyears
baseDirectory = /pscratch/sd/m/mpeterse/e3sm_scratch/pm-cpu/CMPASO-IAF.pm-cpu.240427d

# subdirectory containing restart files
runSubdirectory = run
# subdirectory for ocean history files
oceanHistorySubdirectory = run
#oceanHistorySubdirectory = archive/ocn/hist
# subdirectory for sea ice history files
seaIceHistorySubdirectory = run
#seaIceHistorySubdirectory = archive/ice/hist

# names of namelist and streams files, either a path relative to baseDirectory
# or an absolute path.
oceanNamelistFileName = run/mpaso_in
oceanStreamsFileName = run/streams.ocean
seaIceNamelistFileName = run/mpassi_in
seaIceStreamsFileName = run/streams.seaice

# names of ocean and sea ice meshes (e.g. oEC60to30v3, oQU240v3, oRRS30to10v3, etc.)
mpasMeshName = IcoswISC30E3r5

[output]
## options related to writing out plots, intermediate cached data sets, logs,
## etc.

# directory where analysis should be written
#baseDirectory = /pscratch/sd/d/dcomeau/E3SMv3/Tutorials/v3.LR.historical_0101-baseline.pm-cpu/mpas_analysis_output/yrs1850-1850
baseDirectory = /pscratch/sd/m/mpeterse/e3sm_scratch/Tutorials/CMPASO-IAF.pm-cpu.240427d_vs_b/mpas_analysis_output/yrs1-5

#htmlSubdirectory = /global/cfs/cdirs/e3sm/www/dcomeau/E3SMv3/Tutorials/v3.LR.historical_0101-baseline.pm-cpu/mpas-analysis/yrs1850-1850
htmlSubdirectory = /global/cfs/cdirs/e3sm/www/mpeterse/E3SMv3/Tutorials/CMPASO-IAF.pm-cpu.240427d_vs_b/mpas-analysis/yrs1-5

# a list of analyses to generate.  Valid names can be seen by running:
#   mpas_analysis --list
# This command also lists tags for each analysis.
# Shortcuts exist to generate (or not generate) several types of analysis.
# These include:
#   'all' -- all analyses will be run
#   'all_<tag>' -- all analysis with a particular tag will be run
#   'all_<component>' -- all analyses from a given component (either 'ocean'
#                        or 'seaIce') will be run
#   'only_<component>', 'only_<tag>' -- all analysis from this component or
#                                       with this tag will be run, and all
#                                       analysis for other components or
#                                       without the tag will be skipped
#   'no_<task_name>' -- skip the given task
#   'no_<component>', 'no_<tag>' -- in analogy to 'all_*', skip all analysis
#                                   tasks from the given compoonent or with
#                                   the given tag.  Do
#                                      mpas_analysis --list
#                                   to list all task names and their tags
# an equivalent syntax can be used on the command line to override this
# option:
#    mpas_analysis config.analysis --generate \
#         all,no_ocean,all_timeSeries
# All tasks with tag "landIceCavities" are disabled because this run did not
# include land-ice cavities.
#generate = ['all', 'no_landIceCavities', 'no_BGC', 'no_icebergs', 'no_min', 'no_max', 'no_sose', 'no_climatologyMapAntarcticMelt', 'no_timeSeriesAntarcticMelt', 'no_climatologyMapSose', 'no_woceTransects', 'no_soseTransects', 'no_geojsonTransects', 'no_eke', 'no_index']
#generate = ['all', 'no_landIceCavities', 'no_BGC', 'no_icebergs', 'no_min', 'no_max', 'no_sose', 'no_climatologyMapAntarcticMelt', 'no_timeSeriesAntarcticMelt', 'no_climatologyMapSose', 'no_climatologyMapWaves', 'no_woceTransects', 'no_soseTransects', 'no_geojsonTransects', 'no_hovmollerOceanRegions', 'no_regionalTSDiagrams', 'no_timeSeries']
generate = ['all', 'no_landIceCavities', 'no_BGC', 'no_seaIce', 'no_icebergs', 'no_min', 'no_max', 'no_sose', 'no_climatologyMapAntarcticMelt', 'no_regionalTSDiagrams', 'no_timeSeriesAntarcticMelt', 'no_timeSeriesOceanRegions', 'no_climatologyMapSose', 'no_woceTransects', 'no_soseTransects', 'no_geojsonTransects', 'no_oceanRegionalProfiles', 'no_hovmollerOceanRegions', 'no_climatologyMapEKE', 'no_climatologyMapWaves', 'no_oceanConservation']

[climatology]
## options related to producing climatologies, typically to compare against
## observations and previous runs

# the year from which to compute anomalies if not the start year of the
# simulation.  This might be useful if a long spin-up cycle is performed and
# only the anomaly over a later span of years is of interest.
#anomalyRefYear = 1850

# the first year over which to average climatalogies
startYear = 5
# the last year over which to average climatalogies
endYear = 5

[timeSeries]
## options related to producing time series plots, often to compare against
## observations and previous runs

# the year from which to compute anomalies if not the start year of the
# simulation.  This might be useful if a long spin-up cycle is performed and
# only the anomaly over a later span of years is of interest.
anomalyRefYear = 1

# start and end years for timeseries analysis. Using out-of-bounds values
#   like start_year = 1 and end_year = 9999 will be clipped to the valid range
#   of years, and is a good way of insuring that all values are used.
startYear = 1
endYear = 5

[index]
## options related to producing nino index.

# start and end years for the nino 3.4 analysis.  Using out-of-bounds values
#   like start_year = 1 and end_year = 9999 will be clipped to the valid range
#   of years, and is a good way of insuring that all values are used.
# For valid statistics, index times should include at least 30 years
startYear = 1
endYear = 5

